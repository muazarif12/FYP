Chunk 1 (Score: 0.0070):
 You're not going to want to miss this episode of the AI show where we do text analytics for health.

Chunk 2 (Score: 0.0038):
I teared up a little because I did research in this area many moons ago and it is so much better now.

Chunk 3 (Score: 0.0062):
Hopefully you'll tune in. We'll see you then.

Chunk 4 (Score: 0.0052):
Hello and welcome to this episode of the AI show.

Chunk 5 (Score: 0.0069):
We're going to learn a little bit about text analytics but for a specific use case for health.

Chunk 6 (Score: 0.0046):
I've got Ashley Yeo, Senior Program Manager in the Cognitive Services team.

Chunk 7 (Score: 0.0047):
He does text analytics.

Chunk 8 (Score: 0.0038):
Why don't you tell us what you do and what you work on my friend.

Chunk 9 (Score: 0.0041):
Hi Seth.

Chunk 10 (Score: 0.0064):
Happy to be here and to share with you and your audience about text analytics specifically for the healthcare domain. We released and announced back in July text analytics for health as a preview offering for our customers in the healthcare space for obvious reasons because of the pandemic.

Chunk 11 (Score: 0.0045):
But we put out this product early in January this year and we make the announcement in July because of the demand for it.

Chunk 12 (Score: 0.0064):
So text analytics for health is a product that utilizes NLP natural language processing techniques to process documents in the healthcare space such as doctor's notes, discharge summaries, research articles, those kind of documents in unstructured form. So text analytics for health. I will explain a little bit in a demo about the different features that this text analytics for health API provides. This is really cool but for those that maybe don't know about text analytics in general, can you give us like maybe a minute blurb on what text analytics is and then let's dive into how we've repurposed text analytics to do some stuff for health as you described. So let's start with text analytics.

Chunk 13 (Score: 0.0048):
Sure.

Chunk 14 (Score: 0.0052):
Text analytics provides four features, four functions if you will, all of them natural language processing techniques to extract information from unstructured text. information such as sentiment analysis being able to define or detect the kind of sentiment in each of those unstructured text, especially from social media, text information, text information. Also, we also recently released something called opinion mining that can tag the sentiment to each of the aspects within that text. Text analytics also provide language detection for obvious reasons and we also do key phrase extractions within a blurb like in news articles, also research papers, providing the pulling out the key phrases in those kind of contexts.

Chunk 15 (Score: 0.0051):
Lastly, the fourth feature is name entity recognition which is really key in this healthcare feature. Name entity recognition identifies an entity and assign them to a category. For instance, it's a person name, whether it's an organization, whether it's a date, and also things like email addresses.

Chunk 16 (Score: 0.0048):
So this is cool.

Chunk 17 (Score: 0.0052):
So how did you all repurpose this stuff for health?

Chunk 18 (Score: 0.0067):
Let's talk about text analytics specifically for health.

Chunk 19 (Score: 0.0048):
Sure.

Chunk 20 (Score: 0.0025):
It's actually not repurposed.

Chunk 21 (Score: 0.0072):
Actually, it's an extension of what the text analytics has been offered to our customers.

Chunk 22 (Score: 0.0046):
We partnered with our team in Microsoft Research Health Next.

Chunk 23 (Score: 0.0034):
We started from scratch.

Chunk 24 (Score: 0.0055):
We actually took a set of documents from the healthcare space and asked the subject matter experts like physicians, nurses, researchers to annotate those documents.

Chunk 25 (Score: 0.0043):
To pull the entities, relationships, they are more relevant and critical to the healthcare space.

Chunk 26 (Score: 0.0052):
So we started from scratch, built that, and then using the latest research for an NLP from Microsoft Research and build the models for that.

Chunk 27 (Score: 0.0040):
That's really cool.

Chunk 28 (Score: 0.0069):
I love how you say it's an extension because you can still use text analytics for the other things you mentioned, but now we're extending it to do specific stuff.

Chunk 29 (Score: 0.0056):
Why don't we talk a little about the features, maybe some of the use cases, and when people can take a look at it?

Chunk 30 (Score: 0.0048):
Sure.

Chunk 31 (Score: 0.0034):
Why don't I just go straight to the demo?

Chunk 32 (Score: 0.0061):
So what you see here is a web interface visualization tool that is provided in the container that we recently released for public preview. This visualization tool will allow us to identify the features that we built into text analytics for health.

Chunk 33 (Score: 0.0057):
Alongside this feature, this is, by the way, it's included in the demo, this demo app.

Chunk 34 (Score: 0.0053):
It's included in the container.

Chunk 35 (Score: 0.0033):
I beg your pardon.

Chunk 36 (Score: 0.0055):
So I will select an example text here as I just take talking about a patient history.

Chunk 37 (Score: 0.0064):
And what you see here is the output from the API. We send this text into the API.

Chunk 38 (Score: 0.0046):
It returns as a JSON, for those who understand what JSON is, and it pulls out four things.

Chunk 39 (Score: 0.0044):
So the user is able to identify entities related to eight different categories.

Chunk 40 (Score: 0.0056):
For instance, diagnosis.

Chunk 41 (Score: 0.0043):
We have body structure, symptoms, and the medication as well.

Chunk 42 (Score: 0.0039):
So they all fall into eight categories. Each category has their own entity type.

Chunk 43 (Score: 0.0056):
So you see those being highlighted in the JSON.

Chunk 44 (Score: 0.0055):
But for visualization and simplicity, ease of use, we provide this UI visualization tool.

Chunk 45 (Score: 0.0072):
Also, besides entity recognition, we also extract things that will also link the entity to what we call concepts of vocabularies that are provided in the healthcare space.

Chunk 46 (Score: 0.0028):
Specifically, if you, I cannot move it down. I move down, it will disappear.

Chunk 47 (Score: 0.0043):
But you look at ICD-10, which is the International Conference for Diseases, Classification of Diseases.

Chunk 48 (Score: 0.0064):
And then we have things like SNOMED.

Chunk 49 (Score: 0.0039):
This is all the systematic nomenclature of medicine.

Chunk 50 (Score: 0.0047):
We also have for medication, RSNORM.

Chunk 51 (Score: 0.0063):
So each of those entities that we detect for GERD here, we are also able to link them to all these different concepts, which give us a flexibility for the use cases that our customers are interested in.

Chunk 52 (Score: 0.0051):
If there's a particular concept that they use in their business cases, then they just have to go find that abbreviation or that syntax and get a code.

Chunk 53 (Score: 0.0062):
And then we also do relation extraction.

Chunk 54 (Score: 0.0048):
So for instance, I hear that's a pulse. We identify that as a pulse.

Chunk 55 (Score: 0.0067):
And that will give you, you go into the coding system.

Chunk 56 (Score: 0.0058):
You'll give a definition for it.

Chunk 57 (Score: 0.0061):
But we also see that we have a measurement value for it.

Chunk 58 (Score: 0.0064):
And we have to extract that.

Chunk 59 (Score: 0.0056):
And we build the relationship that says this is the value of the examination.

Chunk 60 (Score: 0.0052):
We also see things that we also look at, things that are negated.

Chunk 61 (Score: 0.0037):
So there's no weight loss. Even though the API will extract that as a symptom, we notice that in the text, there's no weight loss.

Chunk 62 (Score: 0.0037):
We negate that.

Chunk 63 (Score: 0.0060):
That is very critical for making a diagnosis when you're looking at unstructured text.

Chunk 64 (Score: 0.0069):
So those are the four things that we do in the single API call to this endpoint.

Chunk 65 (Score: 0.0061):
And then entity recognition. We do linking of the entity to known concepts or vocabularies. And then we also do relationship extraction between those entities and the attributes.

Chunk 66 (Score: 0.0040):
And lastly, we do negation of those entities.

Chunk 67 (Score: 0.0036):
This is so cool for me.

Chunk 68 (Score: 0.0041):
I don't know if you know this.

Chunk 69 (Score: 0.0025):
My first year of grad school, I took an NLP class.

Chunk 70 (Score: 0.0056):
And our job was to go through emails of disease outbreaks and literally classify it.

Chunk 71 (Score: 0.0070):
And then we also do that.

Chunk 72 (Score: 0.0060):
I'm like, I'm looking at this here.

Chunk 73 (Score: 0.0030):
I'm like tearing up a little bit.

Chunk 74 (Score: 0.0039):
Because the way we used to do it was not this way.

Chunk 75 (Score: 0.0044):
And this is pretty amazing.

Chunk 76 (Score: 0.0045):
So a couple of questions about this.

Chunk 77 (Score: 0.0064):
You mentioned that this is an API call.

Chunk 78 (Score: 0.0047):
Do you have to use this interface?

Chunk 79 (Score: 0.0060):
No, this is a visualization tool.

Chunk 80 (Score: 0.0053):
Like I said, we originally announced this as a container that you can make an API call. The container would then be, you can download the container and deploy to any of your environments, whether it's on Azure or where it's local to your corporate environment.

Chunk 81 (Score: 0.0044):
We realized that there was some challenge for some customers.

Chunk 82 (Score: 0.0047):
So in a few weeks, in fact, in about 10 days, we'll be announcing the release of a hosted API.

Chunk 83 (Score: 0.0058):
And I will switch now to the Postman to show you how the APIs can make a call.

Chunk 84 (Score: 0.0065):
Let's do it.

Chunk 85 (Score: 0.0050):
So here is a Postman setup.

Chunk 86 (Score: 0.0053):
And this is making a call.

Chunk 87 (Score: 0.0042):
Again, this is in local to my environment.

Chunk 88 (Score: 0.0042):
Notice that the container is not HTTPS, but we can make this call to the similar kind of text.

Chunk 89 (Score: 0.0055):
So in the body of your request, you can put up to, I believe, in the container up to a thousand documents. But again, even the more documents you stuff into the request body, it's going to take a while to process. But I'll take the same request body here to demonstrate the call, and I'll send it to my container, which is in the office somewhere, and it's going to take a while.

Chunk 90 (Score: 0.0053):
So this is a synchronous call.

Chunk 91 (Score: 0.0056):
So once you've made the request, you're going to wait for it to finish in order for you to get the result.

Chunk 92 (Score: 0.0045):
What we will be releasing in 10 days is an asynchronous API.

Chunk 93 (Score: 0.0055):
And that will allow you to send the request and forget it, and then come back and query the results of the request.

Chunk 94 (Score: 0.0063):
So this right now, what you're seeing in Postman is the request to the container, which is synchronous.

Chunk 95 (Score: 0.0064):
Again, you'll see that it will return all this output related for each entity that's detected.

Chunk 96 (Score: 0.0062):
The text is the entity.

Chunk 97 (Score: 0.0039):
All right, this is the symptom.

Chunk 98 (Score: 0.0064):
And it shows you the different entities, different concepts that are linked to it.

Chunk 99 (Score: 0.0041):
And then it also has a Boolean for negation. It's negated. If it's not, it's false.

Chunk 100 (Score: 0.0048):
So this is the output from the container.

Chunk 101 (Score: 0.0063):
What I'm going to show you is the output, what we're going to be doing, or be releasing on the 19.

Chunk 102 (Score: 0.0056):
It is an endpoint.

Chunk 103 (Score: 0.0040):
It's hosted.

Chunk 104 (Score: 0.0038):
Ignore the string here because this is from the development environment.

Chunk 105 (Score: 0.0051):
We're in the process of deploying the production right now.

Chunk 106 (Score: 0.0032):
It takes a few days.

Chunk 107 (Score: 0.0052):
So I'm going to send this request of the same body or same text to this API, this hosted API.

Chunk 108 (Score: 0.0073):
Obviously, you've got to remember you've got to provision a text-anatic resource so you can get the key in order for you to authenticate to make the call.

Chunk 109 (Score: 0.0053):
And again, I need to make a point of this.

Chunk 110 (Score: 0.0040):
This public preview is still gated.

Chunk 111 (Score: 0.0056):
It means you have to apply for access because we're trying to understand what are customers' use cases. And so when you apply for access, we can evaluate the use cases that you're going to use for and work with you to improve the service that you are interested in.

Chunk 112 (Score: 0.0065):
So going back to this asynchronous API, this is the same request body that we sent you.

Chunk 113 (Score: 0.0051):
We're going to make the call.

Chunk 114 (Score: 0.0044):
And you can see that it will come back pretty quickly. Right now, it's back. It's back.

Chunk 115 (Score: 0.0053):
But what you don't see is that in the headers, it will be a job ID. And that job ID basically is what you need to make a call to make a get call.

Chunk 116 (Score: 0.0062):
And so what we did to submit this job is a post.

Chunk 117 (Score: 0.0051):
So we do this, the get call and just paste, just extract, programmatically pull out the job ID, insert it at the end of the original API URL, and make the same call, a get call, sorry, not post.

Chunk 118 (Score: 0.0066):
And then you will see the output.

Chunk 119 (Score: 0.0038):
It's going to take a while to format it.

Chunk 120 (Score: 0.0063):
Oh, there we go.

Chunk 121 (Score: 0.0050):
You'll see that it will show you the date that was created and when the date the job was completed.

Chunk 122 (Score: 0.0053):
More importantly, you see a status that it succeeded.

Chunk 123 (Score: 0.0050):
So it allows you to be asynchronous while making the call, the request, and not have to worry about it, especially if you have a lot of documents and you don't want to be sitting there waiting for the synchronous response.

Chunk 124 (Score: 0.0061):
And you can just forget about it and query and look for the status.

Chunk 125 (Score: 0.0044):
The status will be still if it goes from started.

Chunk 126 (Score: 0.0065):
I think I believe is processing.

Chunk 127 (Score: 0.0032):
And sometimes if it fails, it will fail because you might exceed the number of characters per document.

Chunk 128 (Score: 0.0031):
You can go up to a thousand.

Chunk 129 (Score: 0.0064):
We're looking at optimizing that for a hosted endpoint.

Chunk 130 (Score: 0.0058):
Then you will come back and say it succeeded. Once it succeeded, you will have the output that's shown here in the same output that we saw in the container.

Chunk 131 (Score: 0.0043):
This is all very, very cool.

Chunk 132 (Score: 0.0044):
So question, I know with health related stuff, there is this question of privacy. Can you talk about the way that this service protects customers' privacy?

Chunk 133 (Score: 0.0054):
So first off, the request for the hosted API.

Chunk 134 (Score: 0.0037):
So the whole container is within your own environment.

Chunk 135 (Score: 0.0042):
You have control over how you protect your data.

Chunk 136 (Score: 0.0052):
For the hosted API, we are a data processor.

Chunk 137 (Score: 0.0033):
So we don't persist any of your information you sent to us.

Chunk 138 (Score: 0.0041):
And because it's under Azure, you have all the benefits of Azure infrastructure with security, privacy, compliance.

Chunk 139 (Score: 0.0050):
We are a HIPAA compliance, especially when we're talking about healthcare.

Chunk 140 (Score: 0.0041):
So the information you sent to us, we would not persist them.

Chunk 141 (Score: 0.0044):
What our telemetry will collect is just a number of documents.

Chunk 142 (Score: 0.0037):
How many characters are in those documents?

Chunk 143 (Score: 0.0019):
We don't persist any of the content that has been sent to us.

Chunk 144 (Score: 0.0046):
And even if we, to the point where we can't help troubleshoot past a certain amount.

Chunk 145 (Score: 0.0058):
Because this, what you see in the output here for this job, there is an expiration date, right?

Chunk 146 (Score: 0.0038):
We do keep the results because we don't expect you to.

Chunk 147 (Score: 0.0057):
But immediately you'll be done and you'll be pulling the results back.

Chunk 148 (Score: 0.0056):
We will give you some time.

Chunk 149 (Score: 0.0039):
And part of our policy is to persist this for 48 hours.

Chunk 150 (Score: 0.0046):
And after that, it will be deleted. So once you, if you send a job to us and you keep checking, if you don't check within 48 hours, that job, the output will be completely deleted.

Chunk 151 (Score: 0.0043):
So that we will be in compliance with our policies for privacy.

Chunk 152 (Score: 0.0041):
This again is amazing.

Chunk 153 (Score: 0.0034):
Ashley, where can people go to find out more?

Chunk 154 (Score: 0.0059):
Yes, you can also go, you can find out more in the Azure document, Microsoft documentation site.

Chunk 155 (Score: 0.0057):
I look for Connective Services, Text Analytics, and you'll find a section under Text Analytics for Health.

Chunk 156 (Score: 0.0056):
And again, this is a public preview and it's gated right now.

Chunk 157 (Score: 0.0055):
But there is a link in there to go to apply for access.

Chunk 158 (Score: 0.0044):
If not, I can give the information to Seth and he will share it.

Chunk 159 (Score: 0.0066):
That's right, we'll put it below.

Chunk 160 (Score: 0.0046):
Well, Ashley, thank you so much for spending some time with us.

Chunk 161 (Score: 0.0041):
And thank you so much for watching.

Chunk 162 (Score: 0.0058):
We've been learning all about Text Analytics specifically for Health.

Chunk 163 (Score: 0.0044):
Thank you so much for watching and hopefully we'll see you next time.

Chunk 164 (Score: 0.0057):
Take care.

Chunk 165 (Score: 0.0047):
We'll see you next time.

Chunk 166 (Score: 0.0057):
Take care.

